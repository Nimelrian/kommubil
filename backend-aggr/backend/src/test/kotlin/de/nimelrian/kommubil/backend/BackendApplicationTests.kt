package de.nimelrian.kommubil.backend

import org.junit.jupiter.api.Test
import org.springframework.boot.test.context.SpringBootTest
import org.springframework.test.context.DynamicPropertyRegistry
import org.springframework.test.context.DynamicPropertySource
import org.testcontainers.containers.JdbcDatabaseContainer
import org.testcontainers.containers.PostgreSQLContainer
import org.testcontainers.junit.jupiter.Container
import org.testcontainers.junit.jupiter.Testcontainers
import org.testcontainers.utility.DockerImageName

@SpringBootTest
@Testcontainers
class BackendApplicationTests {
    companion object {
        @JvmStatic
        @Container
        private val postgresContainer = postgres("postgis/postgis:14-3.1-alpine") {
            withDatabaseName("kommubil")
            withUsername("kommubil")
            withPassword("kommubil")
        }

        @JvmStatic
        @DynamicPropertySource
        fun overrideProps(registry: DynamicPropertyRegistry) {
            // Override datasource properties with values generated by Testcontainers
            registry.add("spring.datasource.url", postgresContainer::getJdbcUrl)
            registry.add("spring.datasource.username", postgresContainer::getUsername)
            registry.add("spring.datasource.password", postgresContainer::getPassword)
        }

    }

    @Test
    fun contextLoads() {
    }

}

fun postgres(image: String, options: JdbcDatabaseContainer<Nothing>.() -> Unit) =
    PostgreSQLContainer<Nothing>(DockerImageName.parse(image).asCompatibleSubstituteFor("postgres")).apply(options)
